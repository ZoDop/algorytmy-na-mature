
bin - binarny
print(bin(123)[2:]) --> wbudowana funkcja z dziesiętnego na binarny
print(int("101010", 2)) --> wbudowana funkcja z binarnego na dziesiętny

oct - ósemkowy
print(oct(123)[2:]) --> wbudowana funkcja z dziesiętnego na ósemkowy
print(int("156856", 8)) --> wbudowana funkcja z ósemkowego na dziesiętny

hex - szesnastkowy
print(hex(123)[2:]) --> wbudowana funkcja z dziesiętnego na szesnastkowy
print(int("23567", 16)) --> wbudowana funkcja z szesnastkowego na dziesiętny

chr - zmienianie z kodu ASCII na literki
ord - zmienianie z literek na kod ASCII

sqrt(liczba) albo liczba**0.5 - pierwiastek

file = open("symbole.txt", "r") - r oznacza że w trybie do czytania
file = open("symbole.txt", "w") - w oznacza że w trybie do zapisu
file = open("symbole.txt", "a") - a oznacza że w trybie do dodawania

for line in file:      -----> wczytywanie lini bez entera
    line = line.strip()
    print(line)

for line in file:      ------> wczytywanie lini ale rozdzielamy na podstawie tego co jest w nawiasiku
    line = line.split(" ")
    print(line)


s[:] - od początku do konca
s[5:7] - od 5 do 7 wyłącznie
s[5:] - od 5 do konca
s[:5] - od początku do 5 wyłącznie
s[-1] - ostatni element
s[:6:2] - od początku do 6 wyłącznie co drugi element
s[::2] - od początku do konca co drugi element
s[::-1] - od konca do początku

list = [4, 5, 6, 7, 8, 9, 2.,8, 9]
numbers.sort() ------ sortowanie listy, zmiana tej poprzedniej
numbers = sorted(numbers) --------sortowanie listy i wpisywanie ją w nową, ta poprzednia się nie zmienia

numbers.sort(reverse=True) --- sortowanie malejąco


modulo - reszta z dzielenia  %
div - dzielenie całkowite    //
